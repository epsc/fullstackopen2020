{"version":3,"sources":["components/Entries.js","components/EntryForm.js","components/Filter.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Entries","persons","filter","deletePerson","filteredEntries","person","name","toLowerCase","includes","map","key","number","onClick","id","EntryForm","newName","newNumber","addPerson","handleNameChange","handleNumberChange","onSubmit","value","onChange","type","Filter","handleFilterChange","Notification","notification","className","status","message","baseUrl","axios","get","then","response","data","newObject","post","delete","put","App","useState","setPersons","setNewName","setNewNumber","setFilter","setNotification","useEffect","personService","initialList","event","target","preventDefault","window","confirm","find","changedPerson","returnedPerson","catch","error","setTimeout","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dc759b70.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Entries = ({ persons, filter, deletePerson }) => {\r\n  // Filter entries case insensitively, empty filter field means show all\r\n  const filteredEntries = (filter === '')\r\n    ? persons\r\n    : persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\r\n  \r\n  return (\r\n    <div>\r\n      {filteredEntries.map(person => \r\n        <p key={person.name}>\r\n          {person.name} {person.number} &nbsp;                    \r\n          <button onClick={() => deletePerson(person.id)}>delete</button>\r\n        </p>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Entries","import React from 'react'\r\n\r\nconst EntryForm = ({newName, newNumber, addPerson, handleNameChange, handleNumberChange}) => {\r\n  return (\r\n    <form onSubmit={addPerson}>\r\n      <div>\r\n        name: \r\n        <input \r\n          value={newName}\r\n          onChange={handleNameChange}\r\n        />\r\n      </div>\r\n      <div>\r\n        number:\r\n        <input \r\n          value={newNumber}\r\n          onChange={handleNumberChange}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default EntryForm","import React from 'react'\r\n\r\nconst Filter = ({ filter, handleFilterChange }) => {\r\n  return (\r\n    <div>\r\n      filter shown with\r\n      <input\r\n        value={filter}\r\n        onChange={handleFilterChange}\r\n      />\r\n    </div>\r\n  )  \r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Notification = ({ notification }) => {\r\n  if (notification === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className={notification.status}>\r\n      {notification.message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, remove, update }","import React, { useState, useEffect } from 'react';\nimport Entries from './components/Entries'\nimport EntryForm from './components/EntryForm'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter] = useState('')\n  const [ notification, setNotification ] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialList => {\n        setPersons(initialList)\n      })   \n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    if (persons.map(person => person.name).includes(newName)) {\n      const confirmation = window.confirm(`${newName} is already added to the phonebook, replace the old number with a new one?`)\n      \n      if (confirmation) {\n        const person = persons.find(person => person.name === newName)\n        const changedPerson = { ...person, number: newNumber }\n        \n        personService\n          .update(changedPerson.id, changedPerson)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => person.id !== changedPerson.id ? person : returnedPerson))\n            setNotification({\n              status: 'pass',\n              message: `The phone number of ${returnedPerson.name} has been updated`\n            })\n          })\n          .catch(error => {\n            setPersons(persons.filter(person => person.id !== changedPerson.id))\n            setNotification({\n              status: 'error',\n              message: `Information of ${changedPerson.name} has already been removed from the server`\n            })\n            setTimeout(() => {\n              setNotification(null)\n            }, 5000)\n          })\n      }\n    } else {\n      const personObject = ({name: newName, number: newNumber})\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNotification({\n            status: 'pass',\n            message: `${returnedPerson.name} added`\n          })\n        })\n    }\n    setNewName('')\n    setNewNumber('')\n\n    // Remove notification message after 5 seconds\n    setTimeout(() => {\n      setNotification(null)\n    }, 5000)\n  }\n\n  const deletePerson = (id) => {\n    const deletePerson = persons.find(person => person.id === id)\n    const confirmation = window.confirm(`Delete ${deletePerson.name} ?`)\n    \n    if (confirmation) {\n      personService\n        .remove(id)\n        .then(() => {\n          setPersons(persons.filter(person => person.id !== deletePerson.id))\n        })\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={notification} />\n      <Filter\n        filter={filter}\n        handleFilterChange={handleFilterChange}\n      />\n      <h2>Add new</h2>\n      <EntryForm \n        newName={newName} \n        newNumber={newNumber}\n        addPerson={addPerson}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange} \n      />\n      <h2>Numbers</h2>\n      <Entries \n        persons={persons}\n        filter={filter} \n        deletePerson={deletePerson} \n      />\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}